{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "floating-elements-card",
  "type": "registry:ui",
  "title": "Floating Elements Card",
  "author": "Hemant Sharma <hemant.develop@gmail.com>",
  "description": "A card with floating elements appears arround the content on hover",
  "dependencies": [
    "class-variance-authority",
    "motion",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "path": "../docs/components/ui/floating-elements-card.tsx",
      "content": "'use client';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { motion } from 'motion/react';\r\n\r\nconst SPRING_CONFIG = {\r\n    type: 'spring' as const,\r\n    stiffness: 500,\r\n    damping: 25,\r\n};\r\n\r\nconst ICON_SPRING_CONFIG = {\r\n    type: 'spring' as const,\r\n    stiffness: 500,\r\n    damping: 30,\r\n};\r\n\r\nconst cardParentVariant = {\r\n    initial: {},\r\n    animate: {\r\n        transition: {\r\n            staggerChildren: 0.01,\r\n        },\r\n    },\r\n};\r\n\r\n// Generate card variants dynamically\r\nconst createCardVariant = (yOffset: number, scale = 1) => ({\r\n    initial: { y: 0, scale: scale === 1 ? undefined : 0.9 },\r\n    animate: {\r\n        y: yOffset,\r\n        scale,\r\n        transition: SPRING_CONFIG,\r\n    },\r\n});\r\n\r\nconst cardVariants = [\r\n    createCardVariant(210),\r\n    createCardVariant(190, 1),\r\n    createCardVariant(170, 1),\r\n];\r\n\r\nconst iconParentVariant = {\r\n    initial: { y: 0 },\r\n    animate: {\r\n        transition: {\r\n            staggerChildren: 0.1,\r\n        },\r\n    },\r\n};\r\n\r\nconst createIconVariant = (x: number, y: number, rotate: number) => ({\r\n    initial: {\r\n        y: 0,\r\n        x: 0,\r\n        opacity: 0,\r\n        filter: 'blur(8px)',\r\n        scale: 0.5,\r\n    },\r\n    animate: {\r\n        y,\r\n        x,\r\n        opacity: 1,\r\n        filter: 'blur(0px)',\r\n        scale: 1,\r\n        rotate,\r\n        transition: ICON_SPRING_CONFIG,\r\n    },\r\n});\r\n\r\n// Card configuration\r\nconst cardConfigs = [\r\n    { width: 'w-[27rem]', zIndex: 'z-20', hasContent: true },\r\n    { width: 'w-[25rem]', zIndex: 'z-10', hasContent: false },\r\n    { width: 'w-[23rem]', zIndex: 'z-0', hasContent: false },\r\n];\r\n\r\ntype iconLink = {\r\n    icon: React.ReactNode;\r\n    link: string;\r\n};\r\n\r\ninterface Props {\r\n    children: React.ReactNode;\r\n    icons: iconLink[];\r\n}\r\n\r\nexport const FloatingElementsCard = ({ children, icons = [] }: Props) => {\r\n    const iconConfigs = [\r\n        {\r\n            variant: createIconVariant(-180, -120, -30),\r\n            ...icons[0],\r\n            key: '0',\r\n        },\r\n        {\r\n            variant: createIconVariant(-65, -160, -15),\r\n            ...icons[1],\r\n            key: '1',\r\n        },\r\n        {\r\n            variant: createIconVariant(65, -160, 15),\r\n            ...icons[2],\r\n            key: '2',\r\n        },\r\n        {\r\n            variant: createIconVariant(180, -120, 30),\r\n            ...icons[3],\r\n            key: '3',\r\n        },\r\n    ].filter(Boolean);\r\n\r\n    return (\r\n        <motion.div\r\n            initial=\"initial\"\r\n            whileHover=\"animate\"\r\n            className=\"group relative flex h-[30rem] w-[32rem] flex-col items-center justify-center gap-4 overflow-hidden px-20\"\r\n        >\r\n            <motion.div\r\n                variants={cardParentVariant}\r\n                className=\"relative flex items-center justify-center\"\r\n            >\r\n                {cardConfigs.map((config, index) => (\r\n                    <motion.div\r\n                        key={`card-${index}`}\r\n                        variants={cardVariants[index]}\r\n                        className={cn(\r\n                            'absolute h-[25rem] rounded-3xl border border-neutral-300/50 bg-gradient-to-br from-neutral-50 to-neutral-100 shadow-[0_0_10px_2px_rgba(83,83,83,0.15)] backdrop-blur-xl group-hover:shadow-[0_-5px_10px_2px_rgba(83,83,83,0.15)] dark:border-neutral-700/50 dark:from-neutral-800/90 dark:to-neutral-900/90',\r\n                            config.width,\r\n                            config.zIndex,\r\n                            config.hasContent ? 'p-4' : ''\r\n                        )}\r\n                    >\r\n                        {config.hasContent && children}\r\n                    </motion.div>\r\n                ))}\r\n            </motion.div>\r\n\r\n            <motion.div\r\n                className=\"relative inset-0 flex items-center justify-center gap-6\"\r\n                variants={iconParentVariant}\r\n            >\r\n                {iconConfigs.map(({ icon, link, variant, key }) => (\r\n                    <motion.div\r\n                        key={key}\r\n                        className=\"absolute\"\r\n                        variants={variant}\r\n                    >\r\n                        <a\r\n                            href={link || 'https://ui.eunary.com'}\r\n                            target=\"_blank\"\r\n                            className={cn(\r\n                                'flex h-22 w-22 items-center justify-center rounded-full border border-slate-200 bg-gradient-to-br from-white to-slate-100 shadow-lg shadow-neutral-900/50 backdrop-blur-sm dark:border-neutral-600/50 dark:from-neutral-700 dark:to-neutral-800 dark:shadow-neutral-600/50',\r\n                                'origin-center transition-all duration-200 ease-out hover:scale-110'\r\n                            )}\r\n                        >\r\n                            {icon}\r\n                        </a>\r\n                    </motion.div>\r\n                ))}\r\n            </motion.div>\r\n            <div className=\"absolute bottom-0 z-50 hidden h-24 w-full bg-gradient-to-t from-white to-transparent group-hover:block dark:from-black\"></div>\r\n        </motion.div>\r\n    );\r\n};\r\n",
      "type": "registry:ui",
      "target": "components/ui/floating-elements-card.tsx"
    }
  ]
}