{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "floating-elements-card",
  "type": "registry:ui",
  "title": "Floating Elements Card",
  "author": "Hemant Sharma <hemant.develop@gmail.com>",
  "description": "A card with floating elements appears arround the content on hover",
  "dependencies": [
    "class-variance-authority",
    "motion",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "path": "../docs/components/ui/floating-elements-card.tsx",
      "content": "'use client';\n\nimport { cn } from '@/lib/utils';\nimport { motion } from 'motion/react';\n\nconst SPRING_CONFIG = {\n    type: 'spring' as const,\n    stiffness: 500,\n    damping: 25,\n};\n\nconst ICON_SPRING_CONFIG = {\n    type: 'spring' as const,\n    stiffness: 500,\n    damping: 30,\n};\n\nconst cardParentVariant = {\n    initial: {},\n    animate: {\n        transition: {\n            staggerChildren: 0.01,\n        },\n    },\n};\n\n// Generate card variants dynamically\nconst createCardVariant = (yOffset: number, scale = 1) => ({\n    initial: { y: 0, scale: scale === 1 ? undefined : 0.9 },\n    animate: {\n        y: yOffset,\n        scale,\n        transition: SPRING_CONFIG,\n    },\n});\n\nconst cardVariants = [\n    createCardVariant(210),\n    createCardVariant(190, 1),\n    createCardVariant(170, 1),\n];\n\nconst iconParentVariant = {\n    initial: { y: 0 },\n    animate: {\n        transition: {\n            staggerChildren: 0.1,\n        },\n    },\n};\n\nconst createIconVariant = (x: number, y: number, rotate: number) => ({\n    initial: {\n        y: 0,\n        x: 0,\n        opacity: 0,\n        filter: 'blur(8px)',\n        scale: 0.5,\n    },\n    animate: {\n        y,\n        x,\n        opacity: 1,\n        filter: 'blur(0px)',\n        scale: 1,\n        rotate,\n        transition: ICON_SPRING_CONFIG,\n    },\n});\n\n// Card configuration\nconst cardConfigs = [\n    { width: 'w-[27rem]', zIndex: 'z-20', hasContent: true },\n    { width: 'w-[25rem]', zIndex: 'z-10', hasContent: false },\n    { width: 'w-[23rem]', zIndex: 'z-0', hasContent: false },\n];\n\ntype iconLink = {\n    icon: React.ReactNode;\n    link: string;\n};\n\ninterface Props {\n    children: React.ReactNode;\n    icons: iconLink[];\n}\n\nexport const FloatingElementsCard = ({ children, icons = [] }: Props) => {\n    const iconConfigs = [\n        {\n            variant: createIconVariant(-180, -120, -30),\n            ...icons[0],\n            key: '0',\n        },\n        {\n            variant: createIconVariant(-65, -160, -15),\n            ...icons[1],\n            key: '1',\n        },\n        {\n            variant: createIconVariant(65, -160, 15),\n            ...icons[2],\n            key: '2',\n        },\n        {\n            variant: createIconVariant(180, -120, 30),\n            ...icons[3],\n            key: '3',\n        },\n    ].filter(Boolean);\n\n    return (\n        <motion.div\n            initial=\"initial\"\n            whileHover=\"animate\"\n            className=\"group relative flex h-[30rem] w-[32rem] flex-col items-center justify-center gap-4 overflow-hidden px-20\"\n        >\n            <motion.div\n                variants={cardParentVariant}\n                className=\"relative flex items-center justify-center\"\n            >\n                {cardConfigs.map((config, index) => (\n                    <motion.div\n                        key={`card-${index}`}\n                        variants={cardVariants[index]}\n                        className={cn(\n                            'absolute h-[25rem] rounded-3xl border border-neutral-300/50 bg-gradient-to-br from-neutral-50 to-neutral-100 shadow-[0_0_10px_2px_rgba(83,83,83,0.15)] backdrop-blur-xl group-hover:shadow-[0_-5px_10px_2px_rgba(83,83,83,0.15)] dark:border-neutral-700/50 dark:from-neutral-800/90 dark:to-neutral-900/90',\n                            config.width,\n                            config.zIndex,\n                            config.hasContent ? 'p-4' : ''\n                        )}\n                    >\n                        {config.hasContent && children}\n                    </motion.div>\n                ))}\n            </motion.div>\n\n            <motion.div\n                className=\"relative inset-0 flex items-center justify-center gap-6\"\n                variants={iconParentVariant}\n            >\n                {iconConfigs.map(({ icon, link, variant, key }) => (\n                    <motion.div\n                        key={key}\n                        className=\"absolute\"\n                        variants={variant}\n                    >\n                        <a\n                            href={link || 'https://ui.eunary.com'}\n                            target=\"_blank\"\n                            className={cn(\n                                'flex h-22 w-22 items-center justify-center rounded-full border border-slate-200 bg-gradient-to-br from-white to-slate-100 shadow-lg shadow-neutral-900/50 backdrop-blur-sm dark:border-neutral-600/50 dark:from-neutral-700 dark:to-neutral-800 dark:shadow-neutral-600/50',\n                                'origin-center transition-all duration-200 ease-out hover:scale-110'\n                            )}\n                        >\n                            {icon}\n                        </a>\n                    </motion.div>\n                ))}\n            </motion.div>\n            <div className=\"absolute bottom-0 z-50 hidden h-24 w-full bg-gradient-to-t from-white to-transparent group-hover:block dark:from-black\"></div>\n        </motion.div>\n    );\n};\n",
      "type": "registry:ui",
      "target": "components/ui/floating-elements-card.tsx"
    }
  ]
}