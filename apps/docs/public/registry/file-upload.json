{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "file-upload",
  "type": "registry:ui",
  "title": "File Upload",
  "author": "Hemant Sharma <hemant.develop@gmail.com>",
  "description": "A file upload component with drag-and-drop support.",
  "dependencies": [
    "class-variance-authority",
    "motion",
    "clsx",
    "tailwind-merge",
    "react-dropzone",
    "@tabler/icons-react"
  ],
  "files": [
    {
      "path": "../docs/components/ui/file-upload.tsx",
      "content": "'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { AnimatePresence, motion } from 'motion/react';\r\nimport { cn } from '@/lib/utils';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { IconArrowBarDown, IconX } from '@tabler/icons-react';\r\n\r\nconst mainVariant = {\r\n    initial: {\r\n        x: 0,\r\n        y: 0,\r\n        scale: 1,\r\n        opacity: 1,\r\n    },\r\n    animate: {\r\n        x: 15,\r\n        y: -15,\r\n        scale: 1.1,\r\n        opacity: 0.9,\r\n    },\r\n};\r\n\r\nconst childVariant = {\r\n    initial: {\r\n        y: 0,\r\n        scale: 1,\r\n        opacity: 1,\r\n    },\r\n    animate: {\r\n        y: -3,\r\n        scale: 1.05,\r\n        opacity: 0.8,\r\n    },\r\n};\r\n\r\nconst parentVariant = {\r\n    initial: {},\r\n    animate: {\r\n        transition: {\r\n            staggerChildren: 0.1,\r\n            delayChildren: 0.2,\r\n        },\r\n    },\r\n};\r\n\r\nconst secondaryVariant = {\r\n    initial: {\r\n        opacity: 0,\r\n        scale: 0.9,\r\n        y: -10,\r\n    },\r\n    animate: {\r\n        opacity: 1,\r\n        scale: 1,\r\n        y: 0,\r\n        transition: {\r\n            duration: 0.3,\r\n            ease: 'easeInOut',\r\n        },\r\n    },\r\n    exit: {\r\n        opacity: 0,\r\n        scale: 0.9,\r\n        y: -10,\r\n        transition: {\r\n            duration: 0.3,\r\n            ease: 'easeInOut',\r\n        },\r\n    },\r\n};\r\n\r\nexport const FileUpload = ({\r\n    onChange,\r\n    multiple = false,\r\n}: {\r\n    onChange?: (files: File[]) => void;\r\n    multiple?: boolean;\r\n}) => {\r\n    const customMaskStyle = {\r\n        '--r': '10px', // the radius\r\n        '--s': '10px', // size of inner curve\r\n        '--x': '30px', // horizontal offset (no percentage)\r\n        '--y': '0.1px', // vertical offset (no percentage)\r\n        '--_m': '/calc(2*var(--r)) calc(2*var(--r)) radial-gradient(#000 70%,#0000 72%)',\r\n        '--_g': 'conic-gradient(at calc(100% - var(--r)) var(--r),#0000 25%,#000 0)',\r\n        '--_d': '(var(--s) + var(--r))',\r\n        mask: `calc(100% - var(--_d) - var(--x)) 0 var(--_m),\r\n           100% calc(var(--_d) + var(--y)) var(--_m),\r\n           radial-gradient(var(--s) at 100% 0,#0000 99%,#000 calc(100% + 1px))\r\n            calc(-1*var(--r) - var(--x)) calc(var(--r) + var(--y)),\r\n           var(--_g) calc(-1*var(--_d) - var(--x)) 0,\r\n           var(--_g) 0 calc(var(--_d) + var(--y))`,\r\n        maskRepeat: 'no-repeat',\r\n    };\r\n\r\n    const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n    const [removingFile, setRemovingFile] = useState<string | null>(null);\r\n\r\n    const handleFileChange = (newFiles: File[]) => {\r\n        const updatedFiles = multiple\r\n            ? [...selectedFiles, ...newFiles]\r\n            : newFiles;\r\n        setSelectedFiles(updatedFiles);\r\n\r\n        onChange && onChange(newFiles);\r\n    };\r\n\r\n    const handleRemoveFile = (file: File, event: React.MouseEvent) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        setRemovingFile(file.name);\r\n        // Remove the file after animation completes\r\n        setTimeout(() => {\r\n            const updatedFiles = selectedFiles.filter(\r\n                (f) => f.name !== file.name\r\n            );\r\n            setSelectedFiles(updatedFiles);\r\n            setRemovingFile(null);\r\n            onChange && onChange(updatedFiles);\r\n        }, 300);\r\n    };\r\n\r\n    const { getRootProps, isDragActive } = useDropzone({\r\n        multiple,\r\n        noClick: true,\r\n        onDrop: handleFileChange,\r\n        onDropRejected: (error) => {\r\n            console.log(error);\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div className=\"w-full\" {...getRootProps()}>\r\n            <motion.div\r\n                className=\"group relative block w-full cursor-pointer overflow-hidden rounded-lg border border-dashed border-neutral-300 dark:border-neutral-700\"\r\n                initial=\"initial\"\r\n                whileHover=\"animate\"\r\n            >\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"hidden\"\r\n                    id=\"file-upload\"\r\n                    multiple={multiple}\r\n                    onChange={(e) => {\r\n                        handleFileChange(Array.from(e.target.files || []));\r\n                        e.target.value = '';\r\n                    }}\r\n                />\r\n                <div className=\"absolute inset-0 [mask-image:radial-gradient(ellipse_at_center,white,transparent)]\">\r\n                    <GridPattern />\r\n                </div>\r\n                <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n                    <div className=\"relative mx-auto flex h-full w-full max-w-xl flex-col items-center p-10\">\r\n                        <div className=\"my-10 flex flex-col items-center justify-center text-center\">\r\n                            <p className=\"relative font-sans text-base font-bold text-neutral-700 dark:text-neutral-300\">\r\n                                Upload file\r\n                            </p>\r\n                            <p className=\"relative mt-2 font-sans text-base font-normal text-neutral-400 dark:text-neutral-400\">\r\n                                Click or just drag & drop your files here\r\n                            </p>\r\n                        </div>\r\n                        <AnimatePresence mode=\"popLayout\">\r\n                            {selectedFiles.length > 0 && (\r\n                                <div className=\"no-scrollbar max-h-96 w-full overflow-y-auto\">\r\n                                    {selectedFiles.map((file, idx) => (\r\n                                        <motion.div\r\n                                            key={file.name + idx}\r\n                                            initial=\"initial\"\r\n                                            animate={\r\n                                                removingFile === file.name\r\n                                                    ? 'exit'\r\n                                                    : 'animate'\r\n                                            }\r\n                                            exit=\"exit\"\r\n                                            variants={secondaryVariant}\r\n                                            layout\r\n                                            className={cn(\r\n                                                'relative z-40 mx-auto mt-4 flex w-full flex-col items-start justify-start overflow-hidden rounded-xl bg-white p-4 inset-shadow-sm inset-shadow-neutral-200 md:h-24 dark:bg-neutral-900 dark:inset-shadow-neutral-700',\r\n                                                'shadow-sm'\r\n                                            )}\r\n                                        >\r\n                                            <div className=\"flex w-full items-center justify-between gap-4\">\r\n                                                <motion.p\r\n                                                    initial={{ opacity: 0 }}\r\n                                                    animate={{ opacity: 1 }}\r\n                                                    layout\r\n                                                    className=\"max-w-xs truncate text-base text-neutral-700 dark:text-neutral-300\"\r\n                                                >\r\n                                                    {file.name}\r\n                                                </motion.p>\r\n                                                <button>\r\n                                                    <motion.p\r\n                                                        initial={{ opacity: 0 }}\r\n                                                        animate={{ opacity: 1 }}\r\n                                                        layout\r\n                                                        className=\"rounded-lg bg-neutral-100 px-1 py-1 text-sm text-neutral-600 dark:bg-neutral-800 dark:text-white\"\r\n                                                        onClick={(e) =>\r\n                                                            handleRemoveFile(\r\n                                                                file,\r\n                                                                e\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <IconX className=\"h-4 w-4\" />\r\n                                                    </motion.p>\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                            <div className=\"mt-2 flex w-full flex-col items-start justify-between gap-2 text-sm text-neutral-600 md:flex-row md:items-center dark:text-neutral-400\">\r\n                                                <div className=\"flex items-center gap-2 text-xs\">\r\n                                                    <motion.p\r\n                                                        initial={{ opacity: 0 }}\r\n                                                        animate={{ opacity: 1 }}\r\n                                                        layout\r\n                                                        className=\"rounded-md border border-dashed border-neutral-300 px-1 py-0.5 dark:border-neutral-600\"\r\n                                                    >\r\n                                                        {file.type}\r\n                                                    </motion.p>\r\n\r\n                                                    <motion.p\r\n                                                        initial={{ opacity: 0 }}\r\n                                                        animate={{ opacity: 1 }}\r\n                                                        layout\r\n                                                        className=\"rounded-md border border-dashed border-neutral-300 px-1 py-0.5 dark:border-neutral-600\"\r\n                                                    >\r\n                                                        {(\r\n                                                            file.size /\r\n                                                            (1024 * 1024)\r\n                                                        ).toFixed(2)}{' '}\r\n                                                        MB\r\n                                                    </motion.p>\r\n                                                </div>\r\n                                                <motion.p\r\n                                                    initial={{ opacity: 0 }}\r\n                                                    animate={{ opacity: 1 }}\r\n                                                    layout\r\n                                                >\r\n                                                    modified:{' '}\r\n                                                    {new Date(file.lastModified)\r\n                                                        .toLocaleDateString(\r\n                                                            'en-GB',\r\n                                                            {\r\n                                                                day: '2-digit',\r\n                                                                month: 'short',\r\n                                                                year: 'numeric',\r\n                                                            }\r\n                                                        )\r\n                                                        .replace(/\\//g, ' ')\r\n                                                        .replace(/,/g, ',')}\r\n                                                </motion.p>\r\n                                            </div>\r\n                                        </motion.div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </AnimatePresence>\r\n                        {!selectedFiles.length && (\r\n                            <div className=\"transition-discrete duration-200 group-hover:drop-shadow-[0px_10px_25px_rgba(35,228,255,0.15)]\">\r\n                                <motion.div\r\n                                    variants={mainVariant}\r\n                                    transition={{\r\n                                        type: 'spring',\r\n                                        stiffness: 300,\r\n                                        damping: 20,\r\n                                    }}\r\n                                    className=\"relative flex h-28 w-32 justify-center rounded-xl bg-neutral-100 inset-shadow-sm inset-shadow-neutral-200 dark:bg-neutral-900 dark:inset-shadow-neutral-600\"\r\n                                    style={customMaskStyle}\r\n                                >\r\n                                    <motion.div\r\n                                        variants={parentVariant}\r\n                                        className=\"absolute inset-0 flex items-center justify-center\"\r\n                                    >\r\n                                        <motion.div\r\n                                            variants={childVariant}\r\n                                            className=\"absolute bottom-0 mx-1 h-20 w-26 rounded-lg bg-sky-200 dark:bg-cyan-700\"\r\n                                        />\r\n                                        <motion.div\r\n                                            variants={childVariant}\r\n                                            className=\"absolute bottom-0 mx-1 h-18 w-28 rounded-lg bg-cyan-200 dark:bg-cyan-400\"\r\n                                        />\r\n                                    </motion.div>\r\n                                    <div className=\"absolute bottom-0 h-16 w-full rounded-xl bg-neutral-100 inset-shadow-sm inset-shadow-neutral-200 dark:bg-neutral-800 dark:inset-shadow-neutral-600\">\r\n                                        {isDragActive && (\r\n                                            <motion.p\r\n                                                initial={{ opacity: 0 }}\r\n                                                animate={{ opacity: 1 }}\r\n                                                className=\"flex h-full flex-col items-center justify-center text-sm text-neutral-600\"\r\n                                            >\r\n                                                Drop\r\n                                                <IconArrowBarDown className=\"h-4 w-4\" />\r\n                                            </motion.p>\r\n                                        )}\r\n                                    </div>\r\n                                </motion.div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </label>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport function GridPattern() {\r\n    const columns = 41;\r\n    const rows = 11;\r\n    return (\r\n        <div className=\"flex shrink-0 scale-105 flex-wrap items-center justify-center gap-px bg-gray-100 dark:bg-neutral-900\">\r\n            {Array.from({ length: rows }).map((_, row) =>\r\n                Array.from({ length: columns }).map((_, col) => {\r\n                    const index = row * columns + col;\r\n                    return (\r\n                        <div\r\n                            key={`${col}-${row}`}\r\n                            className={`flex h-10 w-10 shrink-0 rounded-[2px] ${\r\n                                index % 2 === 0\r\n                                    ? 'bg-gray-50 dark:bg-neutral-950'\r\n                                    : 'bg-gray-50 shadow-[0px_0px_1px_3px_rgba(255,255,255,1)_inset] dark:bg-neutral-950 dark:shadow-[0px_0px_1px_3px_rgba(0,0,0,1)_inset]'\r\n                            }`}\r\n                        />\r\n                    );\r\n                })\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ui/file-upload.tsx"
    }
  ]
}