{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ios-notifications-stack",
  "type": "registry:ui",
  "title": "IOS Notifications Stack",
  "author": "Hemant Sharma <hemant.develop@gmail.com>",
  "description": "Animated iOS-style notification stack with expandable and collapsible layers",
  "dependencies": [
    "class-variance-authority",
    "motion",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "path": "../docs/components/ui/ios-notifications-stack.tsx",
      "content": "'use client';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useCallback, useState } from 'react';\r\n\r\ninterface Notification {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\ninterface NotificationProps {\r\n    notifications: Notification[];\r\n    className?: string;\r\n}\r\n\r\n// Shared transition config\r\nconst TRANSITION = {\r\n    delay: 0.02,\r\n    duration: 0.3,\r\n    ease: 'easeInOut',\r\n};\r\n\r\n// Animation variants\r\nconst containerVariants = {\r\n    initial: {\r\n        scale: 1.1,\r\n        y: 0,\r\n    },\r\n    animate: {\r\n        scale: [1.1, 1.07, 1.08],\r\n        y: 10,\r\n        transition: {\r\n            staggerChildren: 0.01,\r\n        },\r\n    },\r\n    collapse: {\r\n        scale: 1,\r\n        y: 0,\r\n        transition: {\r\n            delay: 0.3, // Delay to allow additional notifications to collapse first\r\n            staggerChildren: 0.01,\r\n            staggerDirection: -1,\r\n        },\r\n    },\r\n};\r\n\r\nconst notificationVariants: Record<'0' | '1' | '2', any> = {\r\n    '0': {\r\n        initial: {\r\n            y: -10,\r\n            scale: 0.9,\r\n        },\r\n        animate: {\r\n            y: 70,\r\n            scale: 0.95,\r\n            transition: {\r\n                ...TRANSITION,\r\n            },\r\n        },\r\n        collapse: {\r\n            y: -10,\r\n            scale: 0.9,\r\n            transition: {\r\n                ...TRANSITION,\r\n            },\r\n        },\r\n    },\r\n    '1': {\r\n        initial: {\r\n            y: -20,\r\n            scale: 0.8,\r\n        },\r\n        animate: {\r\n            y: 140,\r\n            scale: 0.95,\r\n            transition: {\r\n                ...TRANSITION,\r\n            },\r\n        },\r\n        collapse: {\r\n            y: -20,\r\n            scale: 0.8,\r\n            transition: {\r\n                ...TRANSITION,\r\n            },\r\n        },\r\n    },\r\n    '2': {\r\n        initial: {\r\n            scale: 1,\r\n        },\r\n        animate: {\r\n            scale: 0.95,\r\n            transition: {\r\n                ...TRANSITION,\r\n            },\r\n        },\r\n        collapse: {\r\n            scale: 1,\r\n            transition: {\r\n                ...TRANSITION,\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nconst headerVariants = {\r\n    initial: {\r\n        opacity: 0,\r\n        y: 25,\r\n        scale: 1,\r\n    },\r\n    animate: {\r\n        opacity: 1,\r\n        y: 0,\r\n        scale: 1,\r\n        transition: {\r\n            delay: 0.2,\r\n            ease: 'easeInOut',\r\n            duration: 0.3,\r\n        },\r\n    },\r\n};\r\n\r\nconst collapseButtonVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 },\r\n};\r\n\r\nconst additionalNotificationVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        y: -20,\r\n        scale: 0.8,\r\n        filter: 'blur(2px)',\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        y: 0,\r\n        scale: 0.97,\r\n        filter: 'blur(0px)',\r\n        transition: {\r\n            duration: 0.3,\r\n            ease: 'easeInOut',\r\n        },\r\n    },\r\n    exit: {\r\n        opacity: 0,\r\n        y: -20,\r\n        scale: 0.8,\r\n        filter: 'blur(2px)',\r\n        transition: {\r\n            duration: 0.2,\r\n            ease: 'easeIn',\r\n        },\r\n    },\r\n};\r\n\r\n// Container variants for staggered animations\r\nconst additionalContainerVariants = {\r\n    hidden: {\r\n        transition: {\r\n            staggerChildren: 0.05,\r\n            staggerDirection: 1,\r\n        },\r\n    },\r\n    visible: {\r\n        transition: {\r\n            staggerChildren: 0.05,\r\n            staggerDirection: 1,\r\n        },\r\n    },\r\n    exit: {\r\n        transition: {\r\n            staggerChildren: 0.03,\r\n            staggerDirection: -1,\r\n        },\r\n    },\r\n};\r\n\r\nconst showMoreButtonVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        transition: {\r\n            delay: 0.1,\r\n            duration: 0.2,\r\n        },\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        transition: {\r\n            delay: 0.2,\r\n            duration: 0.2,\r\n        },\r\n    },\r\n};\r\n\r\nexport const IOSNotificationsStack = ({\r\n    notifications,\r\n    className,\r\n}: NotificationProps) => {\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const [showAll, setShowAll] = useState(false);\r\n    const [isCollapsing, setIsCollapsing] = useState(false);\r\n\r\n    const toggleExpanded = useCallback(() => {\r\n        if (isExpanded) {\r\n            // Start collapse sequence\r\n            setIsCollapsing(true);\r\n\r\n            // First hide additional notifications if they're showing\r\n            if (showAll) {\r\n                setShowAll(false);\r\n                // Wait for additional notifications to collapse, then collapse main stack\r\n                setTimeout(() => {\r\n                    setIsExpanded(false);\r\n                    setIsCollapsing(false);\r\n                }, 300); // Duration of additional notifications exit animation\r\n            } else {\r\n                // No additional notifications, collapse main stack directly\r\n                setIsExpanded(false);\r\n                setIsCollapsing(false);\r\n            }\r\n        } else {\r\n            // Expand\r\n            setIsExpanded(true);\r\n            setIsCollapsing(false);\r\n        }\r\n    }, [isExpanded, showAll]);\r\n\r\n    const collapseStack = useCallback(() => {\r\n        setIsCollapsing(true);\r\n\r\n        // First hide additional notifications if they're showing\r\n        if (showAll) {\r\n            setShowAll(false);\r\n            // Wait for additional notifications to collapse, then collapse main stack\r\n            setTimeout(() => {\r\n                setIsExpanded(false);\r\n                setIsCollapsing(false);\r\n            }, 300);\r\n        } else {\r\n            // No additional notifications, collapse main stack directly\r\n            setIsExpanded(false);\r\n            setIsCollapsing(false);\r\n        }\r\n    }, [showAll]);\r\n\r\n    const toggleShowAll = useCallback((e: any) => {\r\n        e.stopPropagation();\r\n        setShowAll((prev) => !prev);\r\n    }, []);\r\n\r\n    const handleKeyDown = useCallback(\r\n        (event: any) => {\r\n            if (event.key === 'Enter' || event.key === ' ') {\r\n                event.preventDefault();\r\n                toggleExpanded();\r\n            }\r\n        },\r\n        [toggleExpanded]\r\n    );\r\n\r\n    const visibleNotifications = notifications.slice(0, 3);\r\n    const additionalNotifications = notifications.slice(3);\r\n\r\n    // Determine animation state for container\r\n    const getContainerAnimationState = () => {\r\n        if (isCollapsing && !showAll) {\r\n            return 'collapse';\r\n        }\r\n        return isExpanded ? 'animate' : 'initial';\r\n    };\r\n\r\n    return (\r\n        <div className={cn('relative', className)}>\r\n            <motion.div\r\n                initial=\"initial\"\r\n                animate={getContainerAnimationState()}\r\n                variants={containerVariants}\r\n                exit=\"collapse\"\r\n                className=\"relative flex h-[30rem] flex-col gap-2 overflow-auto\"\r\n                style={{\r\n                    scrollbarWidth: 'none',\r\n                    msOverflowStyle: 'none',\r\n                }}\r\n            >\r\n                {/* Header */}\r\n                <motion.div\r\n                    variants={headerVariants}\r\n                    className=\"flex w-full items-center justify-between px-2 text-white\"\r\n                >\r\n                    <span className=\"font-medium text-neutral-700 dark:text-neutral-400\">\r\n                        Notifications\r\n                    </span>\r\n                    <motion.button\r\n                        className=\"rounded-full bg-white/50 px-3 py-1 text-sm font-medium text-neutral-600 backdrop-blur-lg transition-colors duration-200 hover:bg-white/30 disabled:opacity-50 dark:bg-black/50 dark:text-neutral-300\"\r\n                        variants={collapseButtonVariants}\r\n                        initial=\"hidden\"\r\n                        animate={isExpanded ? 'visible' : 'hidden'}\r\n                        transition={{ duration: 0.2 }}\r\n                        onClick={collapseStack}\r\n                        disabled={!isExpanded}\r\n                        aria-label=\"Collapse notifications\"\r\n                    >\r\n                        Collapse\r\n                    </motion.button>\r\n                </motion.div>\r\n\r\n                {/* Notification Stack Container */}\r\n                <div className=\"relative\">\r\n                    {/* Main Stack */}\r\n                    <div\r\n                        className=\"relative h-52 w-72 cursor-pointer\"\r\n                        onClick={toggleExpanded}\r\n                        onKeyDown={handleKeyDown}\r\n                        tabIndex={0}\r\n                        role=\"button\"\r\n                        aria-label={\r\n                            isExpanded\r\n                                ? 'Collapse notifications'\r\n                                : 'Expand notifications'\r\n                        }\r\n                        aria-expanded={isExpanded}\r\n                    >\r\n                        {visibleNotifications.map((notification, index) => (\r\n                            <motion.div\r\n                                key={`main-${notification.id}-${index}`}\r\n                                variants={\r\n                                    notificationVariants[\r\n                                        String(index) as '0' | '1' | '2'\r\n                                    ]\r\n                                }\r\n                                className={`absolute top-0 left-0 h-16 w-72 rounded-2xl bg-white/50 px-3 py-2 text-neutral-900 shadow-lg backdrop-blur-lg dark:bg-black/50 dark:text-white ${\r\n                                    index === 2\r\n                                        ? 'z-20'\r\n                                        : index === 1\r\n                                          ? 'z-0'\r\n                                          : 'z-10'\r\n                                }`}\r\n                                style={{\r\n                                    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)',\r\n                                }}\r\n                            >\r\n                                <div className=\"text-sm leading-tight font-semibold text-neutral-900 dark:text-neutral-100\">\r\n                                    {notification.title}\r\n                                </div>\r\n                                <p className=\"mt-1 line-clamp-2 text-xs leading-tight text-neutral-600 dark:text-neutral-400\">\r\n                                    {notification.description}\r\n                                </p>\r\n                            </motion.div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Show more/less button */}\r\n                    {isExpanded && notifications.length > 3 && (\r\n                        <motion.div\r\n                            className=\"mt-2 flex\"\r\n                            variants={showMoreButtonVariants}\r\n                            initial=\"hidden\"\r\n                            animate=\"visible\"\r\n                            exit=\"hidden\"\r\n                        >\r\n                            <button\r\n                                className=\"mr-2 ml-auto text-sm font-medium text-neutral-700 transition-colors dark:text-neutral-400\"\r\n                                onClick={toggleShowAll}\r\n                            >\r\n                                {showAll\r\n                                    ? `Show less`\r\n                                    : `Show ${notifications.length - 3} more`}\r\n                            </button>\r\n                        </motion.div>\r\n                    )}\r\n\r\n                    {/* Additional Notifications with AnimatePresence */}\r\n                    <AnimatePresence mode=\"wait\">\r\n                        {isExpanded &&\r\n                            showAll &&\r\n                            additionalNotifications.length > 0 && (\r\n                                <motion.div\r\n                                    key=\"additional-notifications\"\r\n                                    className=\"mt-4 space-y-2\"\r\n                                    initial=\"hidden\"\r\n                                    animate=\"visible\"\r\n                                    exit=\"exit\"\r\n                                    variants={additionalContainerVariants}\r\n                                >\r\n                                    {additionalNotifications.map(\r\n                                        (notification, index) => (\r\n                                            <motion.div\r\n                                                key={`additional-${notification.id}-${index}`}\r\n                                                variants={\r\n                                                    additionalNotificationVariants\r\n                                                }\r\n                                                className=\"h-16 w-72 rounded-2xl bg-white/50 px-3 py-2 text-neutral-900 shadow-lg backdrop-blur-lg dark:bg-black/50 dark:text-white\"\r\n                                                style={{\r\n                                                    boxShadow:\r\n                                                        '0 4px 20px rgba(0, 0, 0, 0.15)',\r\n                                                }}\r\n                                            >\r\n                                                <div className=\"text-sm leading-tight font-semibold text-neutral-900 dark:text-neutral-100\">\r\n                                                    {notification.title}\r\n                                                </div>\r\n                                                <p className=\"mt-1 line-clamp-2 text-xs leading-tight text-neutral-600 dark:text-neutral-400\">\r\n                                                    {notification.description}\r\n                                                </p>\r\n                                            </motion.div>\r\n                                        )\r\n                                    )}\r\n                                </motion.div>\r\n                            )}\r\n                    </AnimatePresence>\r\n                </div>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n",
      "type": "registry:ui",
      "target": "components/ui/ios-notifications-stack.tsx"
    }
  ]
}