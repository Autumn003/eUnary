{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scrolling-macbook",
  "type": "registry:ui",
  "title": "Scrolling Macbook",
  "author": "Hemant Sharma <hemant.develop@gmail.com>",
  "description": "A scrolling macbook with hover effect.",
  "dependencies": [
    "class-variance-authority",
    "motion",
    "clsx",
    "tailwind-merge"
  ],
  "files": [
    {
      "path": "../docs/components/ui/scrolling-macbook.tsx",
      "content": "import React, { useRef, useState, useEffect, useCallback } from 'react';\r\nimport {\r\n    delay,\r\n    motion,\r\n    useScroll,\r\n    useSpring,\r\n    useTransform,\r\n} from 'motion/react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface MacbookScrollProps {\r\n    children: React.ReactNode;\r\n    className?: string;\r\n}\r\n\r\nconst ScrollingMacbook = ({ children, className }: MacbookScrollProps) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [isMounted, setIsMounted] = useState(false);\r\n    const ref = useRef<HTMLDivElement>(null);\r\n\r\n    const { scrollYProgress } = useScroll({\r\n        target: ref,\r\n        offset: ['start end', 'end start'],\r\n    });\r\n\r\n    // Set initial state and handle mounting\r\n    useEffect(() => {\r\n        setIsMounted(true);\r\n    }, []);\r\n\r\n    const rotateX = useTransform(\r\n        scrollYProgress,\r\n        [0, 0.3, 0.5, 0.7, 1],\r\n        [-75, -75, 0, -75, -75]\r\n    );\r\n    const topGlowRotateX = useTransform(\r\n        scrollYProgress,\r\n        [0, 0.4, 0.5, 0.6, 1],\r\n        [60, 60, 0, 60, 60]\r\n    );\r\n    const topGlowOpacity = useTransform(\r\n        scrollYProgress,\r\n        [0, 0.3, 0.5, 0.7, 1],\r\n        [1, 1, 0, 1, 1]\r\n    );\r\n    const opacity = useTransform(\r\n        scrollYProgress,\r\n        [0, 0.3, 0.5, 0.7, 1],\r\n        [0, 0, 1, 0, 0]\r\n    );\r\n    const scale = useTransform(\r\n        scrollYProgress,\r\n        [0, 0.3, 0.5, 0.7, 1],\r\n        [1, 1, 0.4, 1, 1]\r\n    );\r\n\r\n    const smoothRotateX = useSpring(rotateX, { stiffness: 100, damping: 20 });\r\n    const smoothTopGlowRotateX = useSpring(topGlowRotateX, {\r\n        stiffness: 100,\r\n        damping: 20,\r\n    });\r\n    const hoverRotateX = useSpring(isMounted ? smoothRotateX.get() : -75, {\r\n        stiffness: 150,\r\n        damping: 25,\r\n    });\r\n\r\n    // Memoize hover handlers to prevent unnecessary re-renders\r\n    const handleHoverStart = useCallback(() => {\r\n        setIsHovered(true);\r\n        hoverRotateX.set(0);\r\n    }, [hoverRotateX]);\r\n\r\n    const handleHoverEnd = useCallback(() => {\r\n        setIsHovered(false);\r\n        hoverRotateX.set(smoothRotateX.get());\r\n    }, [hoverRotateX, smoothRotateX]);\r\n\r\n    useEffect(() => {\r\n        if (!isHovered && isMounted) {\r\n            const unsubscribe = smoothRotateX.on('change', (latest) => {\r\n                hoverRotateX.set(latest);\r\n            });\r\n            return unsubscribe;\r\n        }\r\n    }, [isHovered, smoothRotateX, hoverRotateX, isMounted]);\r\n\r\n    const hoverAnimation = {\r\n        scale: isHovered ? 1.5 : 1,\r\n        translateY: isHovered ? -50 : 0,\r\n        translateX: isHovered ? 100 : 0,\r\n        opacity: isHovered ? 1 : 0,\r\n    };\r\n\r\n    const backdropAnimation = {\r\n        scale: isHovered ? 1.5 : 1,\r\n        translateY: isHovered ? -50 : 0,\r\n        translateX: isHovered ? 100 : 0,\r\n        backdropFilter: isHovered ? 'blur(10px)' : 'none',\r\n    };\r\n\r\n    const springTransition = {\r\n        type: 'spring' as const,\r\n        stiffness: 300,\r\n        damping: 20,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className=\"relative isolate z-20 mx-auto flex justify-center\"\r\n        >\r\n            <motion.div\r\n                className=\"group relative isolate [perspective:1000px]\"\r\n                onHoverStart={handleHoverStart}\r\n                onHoverEnd={handleHoverEnd}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: isMounted ? 1 : 0 }}\r\n                transition={{ duration: 0.5 }}\r\n            >\r\n                <motion.div\r\n                    style={{ rotateX: hoverRotateX }}\r\n                    className=\"absolute bottom-[calc(100%-0.0625rem)] h-[8.5rem] w-[13rem] origin-bottom translate-x-3 rounded-t border-2 border-gray-600 px-0.5 py-1 shadow-[inset_0_0_0_2px_theme(colors.black/75%)] [--screen-off-color:theme(colors.gray.900)] [--screen-on-color:theme(colors.gray.600)] [perspective:65px] [transform-style:preserve-3d] before:absolute before:inset-[-0.0625rem] before:z-10 before:rounded-[inherit] before:bg-gradient-to-b before:from-black/40 before:from-[0.0625rem] before:to-black/80 before:transition-opacity before:duration-1000 before:group-hover:opacity-0 before:group-hover:duration-500 after:absolute after:inset-x-[-1px] after:top-0 after:-z-10 after:h-[0.125rem] after:[transform:rotateX(90deg)_translateY(-1px)] after:rounded-t-full after:bg-gray-500\"\r\n                >\r\n                    {/* Webcam notch */}\r\n                    <motion.div\r\n                        animate={{\r\n                            opacity: isHovered ? 0 : 1,\r\n                            transition: {\r\n                                delay: isHovered ? 0 : 0.2,\r\n                                duration: 0.01,\r\n                            },\r\n                        }}\r\n                        className=\"absolute inset-y-0 right-[46%] z-50 h-1 w-6 rounded-b-xs bg-black/75\"\r\n                    />\r\n\r\n                    {/* Top glow effect */}\r\n                    <motion.div\r\n                        className=\"absolute inset-x-0 top-0.5 h-10 origin-top bg-gradient-to-b from-white/15 to-transparent blur-sm\"\r\n                        style={{\r\n                            rotateX: smoothTopGlowRotateX,\r\n                            opacity: isHovered ? 0 : topGlowOpacity,\r\n                            scale,\r\n                        }}\r\n                    />\r\n\r\n                    {/* Reflection effect */}\r\n                    <motion.div\r\n                        style={{ opacity }}\r\n                        className=\"absolute inset-0 z-30 overflow-hidden rounded-[inherit] transition-opacity duration-500\"\r\n                    >\r\n                        <div className=\"absolute size-[110%] -translate-x-10 -translate-y-1/2 -rotate-45 bg-gradient-to-l from-white/10\" />\r\n                    </motion.div>\r\n\r\n                    {/* Blur background for content */}\r\n                    <motion.div\r\n                        animate={hoverAnimation}\r\n                        transition={springTransition}\r\n                        className={cn(\r\n                            className,\r\n                            'z-40 h-full w-full rounded-sm bg-cyan-400/20 blur-lg'\r\n                        )}\r\n                    />\r\n\r\n                    {/* Content container */}\r\n                    <motion.div\r\n                        animate={backdropAnimation}\r\n                        transition={springTransition}\r\n                        className={cn(\r\n                            className,\r\n                            'absolute inset-0 z-40 h-full w-full overflow-hidden rounded-sm bg-cyan-400/10'\r\n                        )}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                </motion.div>\r\n\r\n                {/* MacBook base */}\r\n                <div className=\"relative z-10 h-[0.75rem] w-[14.5rem] rounded-t-sm rounded-b-lg bg-gradient-to-b from-gray-600 from-65% to-gray-700 shadow-[inset_0_2px_0px] shadow-white/10 before:absolute before:top-0 before:left-1/2 before:h-[0.25rem] before:w-[2.5rem] before:-translate-x-1/2 before:rounded-b-full before:bg-gray-700 before:shadow-[inset_2px_0_1px_-2px_theme(colors.black/50%),inset_-2px_0_1px_-2px_theme(colors.black/50%),0_1px_0_theme(colors.white/10%)]\" />\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScrollingMacbook;\r\n",
      "type": "registry:ui",
      "target": "components/ui/scrolling-macbook.tsx"
    }
  ]
}