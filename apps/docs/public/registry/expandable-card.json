{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-card",
  "type": "registry:ui",
  "title": "Expandable Card",
  "author": "Hemant Sharma <hemant.develop@gmail.com>",
  "description": "An iphone style expandable card.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "../docs/components/ui/expandable-card.tsx",
      "content": "'use client';\n\nimport Image from 'next/image';\nimport { motion } from 'framer-motion';\nimport { useState } from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface cardProps {\n    title: string;\n    subtitle: string;\n    backgroundImage: string;\n    contextImage: string;\n    description: string;\n    className?: string;\n}\n\nconst ExpandableCard = ({\n    title,\n    subtitle,\n    backgroundImage,\n    contextImage,\n    description,\n    className,\n}: cardProps) => {\n    const [isHovered, setIsHovered] = useState(false);\n    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n    const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n        const { left, top, width, height } =\n            e.currentTarget.getBoundingClientRect();\n        const x = (e.clientX - left - width / 2) / 15; // Reduce movement range\n        const y = (e.clientY - top - height / 2) / 15;\n        setMousePosition({ x, y });\n    };\n\n    const handleMouseLeave = () => {\n        setIsHovered(false);\n        setMousePosition({ x: 0, y: 0 }); // Reset to original position\n    };\n\n    return (\n        <motion.div\n            initial={{ width: 300, height: 400 }}\n            animate={\n                isHovered\n                    ? { width: 500, height: 300 }\n                    : { width: 300, height: 400 }\n            }\n            className={cn(\n                `group relative h-64 w-[28rem] overflow-hidden rounded-4xl bg-cover bg-center`,\n                className\n            )}\n            style={{ backgroundImage: `url(${backgroundImage})` }}\n            onMouseEnter={() => setIsHovered(true)}\n            onMouseLeave={handleMouseLeave}\n            onMouseMove={handleMouseMove}\n        >\n            <motion.div\n                initial={{ x: 0, y: 0 }}\n                animate={{\n                    x: mousePosition.x,\n                    y: mousePosition.y,\n                    margin: isHovered ? 15 : 0,\n                }}\n                transition={{ type: 'tween', ease: 'easeOut', duration: 0.2 }}\n                className=\"BLUR_BG absolute inset-0 overflow-hidden rounded-3xl bg-black/30 backdrop-blur\"\n            >\n                <div className=\"grid grid-cols-3\">\n                    <motion.div\n                        initial={{ y: 20, x: 0 }}\n                        animate={\n                            isHovered\n                                ? { y: 0, x: 0 }\n                                : { y: 70, x: 71, scale: 1.8 }\n                        }\n                        transition={{ duration: 0.3 }}\n                        className=\"col-span-1 m-4 h-32 w-32\"\n                    >\n                        <Image\n                            src={contextImage}\n                            alt=\"bg-image\"\n                            width={200}\n                            height={200}\n                            className=\"h-32 w-32 rounded-2xl\"\n                        />\n                    </motion.div>\n                    <motion.div\n                        initial={{ y: 50, opacity: 1 }}\n                        animate={\n                            isHovered\n                                ? { y: 0, opacity: 1 }\n                                : { x: -70, y: 270, opacity: 1 }\n                        }\n                        transition={{ duration: 0.3 }}\n                        className=\"col-span-2 m-4 flex flex-col justify-center\"\n                    >\n                        <h3 className=\"text-xl font-semibold text-stone-400\">\n                            {title}\n                        </h3>\n                        <h2 className=\"my-2 text-2xl font-bold text-white\">\n                            {subtitle}\n                        </h2>\n                        <motion.p\n                            initial={{ opacity: 0 }}\n                            animate={\n                                isHovered ? { opacity: 1 } : { opacity: 0 }\n                            }\n                            className=\"text-sm text-stone-200\"\n                        >\n                            {description}\n                        </motion.p>\n                    </motion.div>\n                </div>\n\n                <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={\n                        isHovered ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }\n                    }\n                    transition={{ duration: 0.3 }}\n                    className=\"my-6 flex items-center justify-around\"\n                >\n                    <Button>Add Cart</Button>\n                    <Button>Delete</Button>\n                </motion.div>\n            </motion.div>\n        </motion.div>\n    );\n};\n\nconst Button = ({ children }: { children: string }) => {\n    return (\n        <div>\n            <button\n                className=\"h-12 w-48 cursor-pointer rounded-[14px] bg-white/60 font-semibold text-stone-900 backdrop-blur transition-all duration-150 hover:bg-white/90\"\n                onClick={() => alert(`${children} button clicked`)}\n            >\n                {children}\n            </button>\n        </div>\n    );\n};\n\nexport default ExpandableCard;\n",
      "type": "registry:ui",
      "target": "components/ui/expandable-card.tsx"
    }
  ]
}