{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-card",
  "type": "registry:ui",
  "title": "Expandable Card",
  "author": "Hemant Sharma <hemant.develop@gmail.com>",
  "description": "An iphone style expandable card.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "../docs/components/ui/expandable-card.tsx",
      "content": "'use client';\r\n\r\nimport Image from 'next/image';\r\nimport { motion } from 'framer-motion';\r\nimport { useState } from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface cardProps {\r\n    title: string;\r\n    subtitle: string;\r\n    backgroundImage: string;\r\n    contextImage: string;\r\n    description: string;\r\n    className?: string;\r\n}\r\n\r\nconst ExpandableCard = ({\r\n    title,\r\n    subtitle,\r\n    backgroundImage,\r\n    contextImage,\r\n    description,\r\n    className,\r\n}: cardProps) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n    const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\r\n\r\n    const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\r\n        const { left, top, width, height } =\r\n            e.currentTarget.getBoundingClientRect();\r\n        const x = (e.clientX - left - width / 2) / 15; // Reduce movement range\r\n        const y = (e.clientY - top - height / 2) / 15;\r\n        setMousePosition({ x, y });\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setIsHovered(false);\r\n        setMousePosition({ x: 0, y: 0 }); // Reset to original position\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{ width: 300, height: 400 }}\r\n            animate={\r\n                isHovered\r\n                    ? { width: 500, height: 300 }\r\n                    : { width: 300, height: 400 }\r\n            }\r\n            className={cn(\r\n                `group relative h-64 w-[28rem] overflow-hidden rounded-4xl bg-cover bg-center`,\r\n                className\r\n            )}\r\n            style={{ backgroundImage: `url(${backgroundImage})` }}\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={handleMouseLeave}\r\n            onMouseMove={handleMouseMove}\r\n        >\r\n            <motion.div\r\n                initial={{ x: 0, y: 0 }}\r\n                animate={{\r\n                    x: mousePosition.x,\r\n                    y: mousePosition.y,\r\n                    margin: isHovered ? 15 : 0,\r\n                }}\r\n                transition={{ type: 'tween', ease: 'easeOut', duration: 0.2 }}\r\n                className=\"BLUR_BG absolute inset-0 overflow-hidden rounded-3xl bg-black/30 backdrop-blur\"\r\n            >\r\n                <div className=\"grid grid-cols-3\">\r\n                    <motion.div\r\n                        initial={{ y: 20, x: 0 }}\r\n                        animate={\r\n                            isHovered\r\n                                ? { y: 0, x: 0 }\r\n                                : { y: 70, x: 71, scale: 1.8 }\r\n                        }\r\n                        transition={{ duration: 0.3 }}\r\n                        className=\"col-span-1 m-4 h-32 w-32\"\r\n                    >\r\n                        <Image\r\n                            src={contextImage}\r\n                            alt=\"bg-image\"\r\n                            width={200}\r\n                            height={200}\r\n                            className=\"h-32 w-32 rounded-2xl\"\r\n                        />\r\n                    </motion.div>\r\n                    <motion.div\r\n                        initial={{ y: 50, opacity: 1 }}\r\n                        animate={\r\n                            isHovered\r\n                                ? { y: 0, opacity: 1 }\r\n                                : { x: -70, y: 270, opacity: 1 }\r\n                        }\r\n                        transition={{ duration: 0.3 }}\r\n                        className=\"col-span-2 m-4 flex flex-col justify-center\"\r\n                    >\r\n                        <h3 className=\"text-xl font-semibold text-stone-400\">\r\n                            {title}\r\n                        </h3>\r\n                        <h2 className=\"my-2 text-2xl font-bold text-white\">\r\n                            {subtitle}\r\n                        </h2>\r\n                        <motion.p\r\n                            initial={{ opacity: 0 }}\r\n                            animate={\r\n                                isHovered ? { opacity: 1 } : { opacity: 0 }\r\n                            }\r\n                            className=\"text-sm text-stone-200\"\r\n                        >\r\n                            {description}\r\n                        </motion.p>\r\n                    </motion.div>\r\n                </div>\r\n\r\n                <motion.div\r\n                    initial={{ opacity: 0, y: 20 }}\r\n                    animate={\r\n                        isHovered ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }\r\n                    }\r\n                    transition={{ duration: 0.3 }}\r\n                    className=\"my-6 flex items-center justify-around\"\r\n                >\r\n                    <Button>Add Cart</Button>\r\n                    <Button>Delete</Button>\r\n                </motion.div>\r\n            </motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst Button = ({ children }: { children: string }) => {\r\n    return (\r\n        <div>\r\n            <button\r\n                className=\"h-12 w-48 cursor-pointer rounded-[14px] bg-white/60 font-semibold text-stone-900 backdrop-blur transition-all duration-150 hover:bg-white/90\"\r\n                onClick={() => alert(`${children} button clicked`)}\r\n            >\r\n                {children}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpandableCard;\r\n",
      "type": "registry:ui",
      "target": "components/ui/expandable-card.tsx"
    }
  ]
}